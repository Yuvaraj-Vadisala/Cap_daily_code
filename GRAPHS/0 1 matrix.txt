class Solution {
    public int[][] updateMatrix(int[][] mat) {
        int row = mat.length, col = mat[0].length;
        Queue<int[]> q = new LinkedList<>(); 
        int[][] moves = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};
        boolean[][] visited = new boolean[row][col];
        
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                if (mat[i][j] == 0) {
                    q.add(new int[]{i, j});
                    visited[i][j] = true;
                }
            }
        }
         int qsize = q.size();
        int distance = 1; 
         
        
        while (!q.isEmpty()) {
            for (int i = 0; i < qsize; i++) {
                int[] cur = q.poll(); 
                for (int[] move : moves) {
                    int x = cur[0] + move[0], y = cur[1] + move[1];
                    if (x >= 0 && y >= 0 && x < row && y < col && !visited[x][y]) {
                        mat[x][y] = distance; 
                        q.add(new int[]{x, y});
                        visited[x][y] = true;
                    }
                }
                
            }
            distance++; 
            qsize= q.size();
        }
        
        return mat;
    }
}